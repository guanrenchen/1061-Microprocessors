LIST p=18F4520		
#include<p18f4520.inC>
CONFIG  OSC = INTIO67		; OsCillAtor SElECtion Bits (IntErnAl osCillAtor BloCk, port FunCtion on RA6 AnD RA7)
CONFIG  WDT = OFF		; WAtChDog TimEr EnABlE Bit (WDT DisABlED (Control is plACED on thE SWDTEN Bit))
    
	org 	0x00	

#define REQ_DIST 0x18		; Set requested distance
#define DEG_START 0x010		; starting address of the array

MOVLF	MACRO N, DATUM		; Move literal to file
	MOVLW N
	MOVWF DATUM
	ENDM
	
ADDLF	MACRO N, DATUM		; Add literal to file
	MOVLW N
	ADDWF DATUM,1
	ENDM
	
SUBLF	MACRO N, DATUM		; Subtract literal from file
	MOVLW N
	SUBWF DATUM,1
	ENDM
	
Initial:	MOVLF 0x00, 0x010	; set value for array
	MOVLF 0x04, 0x011
	MOVLF 0x08, 0x012
	MOVLF 0x0D, 0x013
	MOVLF 0x11, 0x014
	MOVLF 0x16, 0x015
	MOVLF 0x1A, 0x016
	MOVLF 0x1F, 0x017
	MOVLF 0x23, 0x018
	MOVLF 0x28, 0x019
	MOVLF 0x2C, 0x01A
	MOVLF 0x30, 0x01B
	MOVLF 0x35, 0x01C
	MOVLF 0x39, 0x01D
	MOVLF 0x3D, 0x01E
	MOVLF 0x42, 0x01F	
	MOVLF 0x46, 0x020
	MOVLF 0x4A, 0x021
	MOVLF 0x4F, 0x022
	MOVLF 0x53, 0x023
	MOVLF 0x57, 0x024
	MOVLF 0x5B, 0x025
	MOVLF 0x5F, 0x026
	MOVLF 0x64, 0x027
	MOVLF 0x68, 0x028
	MOVLF 0x6C, 0x029
	MOVLF 0x70, 0x02A
	MOVLF 0x74, 0x02B
	MOVLF 0x78, 0x02C
	MOVLF 0x7C, 0x02D
	MOVLF 0x7F, 0x02E
	MOVLF 0x83, 0x02F	
	MOVLF 0x87, 0x030
	MOVLF 0x8B, 0x031
	MOVLF 0x8F, 0x032
	MOVLF 0x92, 0x033
	MOVLF 0x96, 0x034
	MOVLF 0x9A, 0x035
	MOVLF 0x9D, 0x036
	MOVLF 0xA1, 0x037
	MOVLF 0xA4, 0x038
	MOVLF 0xA7, 0x039
	MOVLF 0xAB, 0x03A
	MOVLF 0xAE, 0x03B
	MOVLF 0xB1, 0x03C
	MOVLF 0xB5, 0x03D
	MOVLF 0xB8, 0x03E
	MOVLF 0xBB, 0x03F	
	MOVLF 0xBE, 0x040
	MOVLF 0xC1, 0x041
	MOVLF 0xC4, 0x042
	MOVLF 0xC6, 0x043
	MOVLF 0xC9, 0x044
	MOVLF 0xCC, 0x045
	MOVLF 0xCF, 0x046
	MOVLF 0xD1, 0x047
	MOVLF 0xD4, 0x048
	MOVLF 0xD6, 0x049
	MOVLF 0xD9, 0x04A
	MOVLF 0xDB, 0x04B
	MOVLF 0xDD, 0x04C
	MOVLF 0xDF, 0x04D
	MOVLF 0xE2, 0x04E
	MOVLF 0xE4, 0x04F	
	MOVLF 0xE6, 0x050
	MOVLF 0xE8, 0x051
	MOVLF 0xE9, 0x052
	MOVLF 0xEB, 0x053
	MOVLF 0xED, 0x054
	MOVLF 0xEE, 0x055
	MOVLF 0xF0, 0x056
	MOVLF 0xF2, 0x057
	MOVLF 0xF3, 0x058
	MOVLF 0xF4, 0x059
	MOVLF 0xF6, 0x05A
	MOVLF 0xF7, 0x05B
	MOVLF 0xF8, 0x05C
	MOVLF 0xF9, 0x05D
	MOVLF 0xFA, 0x05E
	MOVLF 0xFB, 0x05F	
	MOVLF 0xFC, 0x060
	MOVLF 0xFC, 0x061
	MOVLF 0xFD, 0x062
	MOVLF 0xFE, 0x063
	MOVLF 0xFE, 0x064
	MOVLF 0xFF, 0x065
	MOVLF 0xFF, 0x066
	MOVLF 0xFF, 0x067
	MOVLF 0xFF, 0x068
	MOVLF 0xFF, 0x069
	MOVLF 0xFF, 0x06A
		
	CLRF LATB		; clear registers
	CLRF LATC	
	CLRF LATD
	CLRF 0x001
	CLRF 0x002

start:	MOVLF REQ_DIST, 0x001	; Write requested distance to 0x001
	LFSR	0, DEG_START	; Set FSR0 to where the array starts

loop:	MOVFF	0x001, WREG	; Write requested distance to WREG for comparing
	CPFSLT	INDF0
	GOTO	finish
	MOVFF POSTINC0, LATB	; Store the distance of previous angle
	ADDLF	0x01, LATD
	GOTO	loop

finish:	MOVFF	INDF0, LATC
	SUBWF LATC
	SUBFWB LATB,0
	CPFSGT	LATC		; Decide which distance is closer
	GOTO	final
	SUBLF	0x01, LATD
	
final:	MOVFF LATD, 0x002	; Store the answer in 0x002
	END



